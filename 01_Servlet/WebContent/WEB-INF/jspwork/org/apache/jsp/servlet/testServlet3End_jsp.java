/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2020-01-30 04:02:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.servlet;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class testServlet3End_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <!-- page지시어 : 현재 JSP페이지를 처리하는데 필요한 각종 속성을 기술하는 부분 -->\r\n");
      out.write("  \r\n");
      out.write("  ");
  
    	String name = (String) request.getAttribute("name");
    	String age = (String) request.getAttribute("age");
    	String city = (String) request.getAttribute("city");
    	String height = (String) request.getAttribute("height");
    	String gender = (String) request.getAttribute("gender");
    	String food = (String) request.getAttribute("food");
    	String recommendation = (String)request.getAttribute("recommendation");		
    	// 형변환 해주는이유는 반환값이 오브젝트이기 때문
   
      out.write("\r\n");
      out.write("    <!-- scriptlet, 자바 코드를 넣는곳 -->\r\n");
      out.write("    <!-- 화면기반페이지에 자바 코드를 넣는것 -->\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<style>\r\n");
      out.write("\th2{color:red;}\r\n");
      out.write("\tspan.name{color:orange; font-weight:bold;}\r\n");
      out.write("\tspan.gender{color:yellow; font-weight:bold; background: black;}\r\n");
      out.write("\tspan.age{color:green; font-weight:bold;}\r\n");
      out.write("\tspan.city{color:blue; font-weight:bold;}\r\n");
      out.write("\tspan.height{color:navy; font-weight:bold;}\r\n");
      out.write("\tspan.food{color:purple; font-weight:bold;}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<title>개인 취향 테스트 결과 </title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h2>개인 취향 테스트 결과 (POST)</h2>\r\n");
      out.write("\t<span class='name'>");
      out.print( name );
      out.write("</span>님은  ");
      out.write("\r\n");
      out.write("\t <!-- 아무한테도 안보여주고, 코드로만 보여주고 싶은 주석은 ");
      out.write(" 을 사용하면 된다. -->\r\n");
      out.write("\t \r\n");
      out.write("\t<span class='age'>");
      out.print( age );
      out.write("</span>이시며  <!-- %s = age -->\r\n");
      out.write("\t<span class='city'>");
      out.print( city );
      out.write("</span>에 사는  <!-- %s = city -->\r\n");
      out.write("\t키는 <span class='height'>");
      out.print( height );
      out.write("</span>cm인  <!-- %s = height -->\r\n");
      out.write("\t<span class='gender'>");
      out.print( gender );
      out.write("</span>입니다.  <!-- %s = gender -->\r\n");
      out.write("\t좋아하는 음식은<span class='food'>");
      out.print( food);
      out.write("</span> 입니다. \r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<h3>");
      out.print( age );
      out.write("에 맞는 선물 추천</h3>\r\n");
      out.write("\t'");
      out.print( recommendation );
      out.write("' 선물은 어떠신가요?\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- page not found exception은 action 부분과 servlet부분  -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
